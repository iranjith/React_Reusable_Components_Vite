import{j as r}from"./jsx-runtime-DEdD30eg.js";import{u as l,Q as u,a as p}from"./useQuery-CFIHvpeY.js";import"./index-RYns6xqu.js";const m=async()=>{const e=await fetch("https://jsonplaceholder.typicode.com/posts");if(!e.ok)throw new Error("Network response was not ok");return await e.json()},c=()=>{const{data:e,error:s,isLoading:d}=l({queryKey:["posts"],queryFn:m,staleTime:6e4});return d?r.jsx("div",{children:"Loading..."}):s?r.jsxs("div",{children:["An error occurred: ",s.message]}):r.jsx("ul",{style:{color:"white",textAlign:"left"},children:e.map(o=>r.jsx("li",{style:{border:"1px solid white"},children:o.title},o.id)).slice(0,10)})};c.__docgenInfo={description:"",methods:[],displayName:"ListWithQuery"};const x={title:"Components/ListWithQuery",component:c,decorators:[e=>r.jsx(u,{client:new p,children:r.jsx(e,{})})],parameters:{layout:"centered"},tags:["autodocs"],argTypes:{}},t={};var a,i,n;t.parameters={...t.parameters,docs:{...(a=t.parameters)==null?void 0:a.docs,source:{originalSource:"{}",...(n=(i=t.parameters)==null?void 0:i.docs)==null?void 0:n.source}}};const j=["Default"];export{t as Default,j as __namedExportsOrder,x as default};
